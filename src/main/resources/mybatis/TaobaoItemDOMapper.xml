<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="guda.task.dao.TaobaoItemDOMapper">
  <resultMap id="BaseResultMap" type="guda.task.dao.domain.TaobaoItemDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="taobao_user_id" jdbcType="VARCHAR" property="taobaoUserId" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="seller_cids" jdbcType="VARCHAR" property="sellerCids" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="item_url" jdbcType="VARCHAR" property="itemUrl" />
    <result column="num" jdbcType="BIGINT" property="num" />
    <result column="list_time" jdbcType="TIMESTAMP" property="listTime" />
    <result column="delist_time" jdbcType="TIMESTAMP" property="delistTime" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="has_discount" jdbcType="INTEGER" property="hasDiscount" />
    <result column="has_showcase" jdbcType="INTEGER" property="hasShowcase" />
    <result column="approve_status" jdbcType="VARCHAR" property="approveStatus" />
    <result column="is_virtual" jdbcType="INTEGER" property="isVirtual" />
    <result column="num_iid" jdbcType="BIGINT" property="numIid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="valid_thru" jdbcType="BIGINT" property="validThru" />
    <result column="sold_quantity" jdbcType="BIGINT" property="soldQuantity" />
    <result column="violation" jdbcType="INTEGER" property="violation" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, taobao_user_id, cid, seller_cids, pic_url, item_url, num, list_time, delist_time, 
    price, has_discount, has_showcase, approve_status, is_virtual, num_iid, title, nick, 
    type, valid_thru, sold_quantity, violation, gmt_created
  </sql>
  <select id="selectByExample" parameterType="guda.task.dao.domain.TaobaoItemDOCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from taobao_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow &gt;= 0">
      limit ${startRow} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from taobao_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from taobao_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="guda.task.dao.domain.TaobaoItemDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into taobao_item (taobao_user_id, cid, seller_cids, 
      pic_url, item_url, num, 
      list_time, delist_time, price, 
      has_discount, has_showcase, approve_status, 
      is_virtual, num_iid, title, 
      nick, type, valid_thru, 
      sold_quantity, violation, gmt_created
      )
    values (#{taobaoUserId,jdbcType=VARCHAR}, #{cid,jdbcType=BIGINT}, #{sellerCids,jdbcType=VARCHAR}, 
      #{picUrl,jdbcType=VARCHAR}, #{itemUrl,jdbcType=VARCHAR}, #{num,jdbcType=BIGINT}, 
      #{listTime,jdbcType=TIMESTAMP}, #{delistTime,jdbcType=TIMESTAMP}, #{price,jdbcType=BIGINT}, 
      #{hasDiscount,jdbcType=INTEGER}, #{hasShowcase,jdbcType=INTEGER}, #{approveStatus,jdbcType=VARCHAR}, 
      #{isVirtual,jdbcType=INTEGER}, #{numIid,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{nick,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{validThru,jdbcType=BIGINT}, 
      #{soldQuantity,jdbcType=BIGINT}, #{violation,jdbcType=INTEGER}, #{gmtCreated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="guda.task.dao.domain.TaobaoItemDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into taobao_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taobaoUserId != null">
        taobao_user_id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="sellerCids != null">
        seller_cids,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="itemUrl != null">
        item_url,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="listTime != null">
        list_time,
      </if>
      <if test="delistTime != null">
        delist_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="hasDiscount != null">
        has_discount,
      </if>
      <if test="hasShowcase != null">
        has_showcase,
      </if>
      <if test="approveStatus != null">
        approve_status,
      </if>
      <if test="isVirtual != null">
        is_virtual,
      </if>
      <if test="numIid != null">
        num_iid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="nick != null">
        nick,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="validThru != null">
        valid_thru,
      </if>
      <if test="soldQuantity != null">
        sold_quantity,
      </if>
      <if test="violation != null">
        violation,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taobaoUserId != null">
        #{taobaoUserId,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="sellerCids != null">
        #{sellerCids,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="itemUrl != null">
        #{itemUrl,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=BIGINT},
      </if>
      <if test="listTime != null">
        #{listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delistTime != null">
        #{delistTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="hasDiscount != null">
        #{hasDiscount,jdbcType=INTEGER},
      </if>
      <if test="hasShowcase != null">
        #{hasShowcase,jdbcType=INTEGER},
      </if>
      <if test="approveStatus != null">
        #{approveStatus,jdbcType=VARCHAR},
      </if>
      <if test="isVirtual != null">
        #{isVirtual,jdbcType=INTEGER},
      </if>
      <if test="numIid != null">
        #{numIid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="nick != null">
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="validThru != null">
        #{validThru,jdbcType=BIGINT},
      </if>
      <if test="soldQuantity != null">
        #{soldQuantity,jdbcType=BIGINT},
      </if>
      <if test="violation != null">
        #{violation,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="guda.task.dao.domain.TaobaoItemDOCriteria" resultType="java.lang.Integer">
    select count(*) from taobao_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="guda.task.dao.domain.TaobaoItemDO">
    update taobao_item
    <set>
      <if test="taobaoUserId != null">
        taobao_user_id = #{taobaoUserId,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="sellerCids != null">
        seller_cids = #{sellerCids,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="itemUrl != null">
        item_url = #{itemUrl,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=BIGINT},
      </if>
      <if test="listTime != null">
        list_time = #{listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delistTime != null">
        delist_time = #{delistTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="hasDiscount != null">
        has_discount = #{hasDiscount,jdbcType=INTEGER},
      </if>
      <if test="hasShowcase != null">
        has_showcase = #{hasShowcase,jdbcType=INTEGER},
      </if>
      <if test="approveStatus != null">
        approve_status = #{approveStatus,jdbcType=VARCHAR},
      </if>
      <if test="isVirtual != null">
        is_virtual = #{isVirtual,jdbcType=INTEGER},
      </if>
      <if test="numIid != null">
        num_iid = #{numIid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="nick != null">
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="validThru != null">
        valid_thru = #{validThru,jdbcType=BIGINT},
      </if>
      <if test="soldQuantity != null">
        sold_quantity = #{soldQuantity,jdbcType=BIGINT},
      </if>
      <if test="violation != null">
        violation = #{violation,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="guda.task.dao.domain.TaobaoItemDO">
    update taobao_item
    set taobao_user_id = #{taobaoUserId,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=BIGINT},
      seller_cids = #{sellerCids,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      item_url = #{itemUrl,jdbcType=VARCHAR},
      num = #{num,jdbcType=BIGINT},
      list_time = #{listTime,jdbcType=TIMESTAMP},
      delist_time = #{delistTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=BIGINT},
      has_discount = #{hasDiscount,jdbcType=INTEGER},
      has_showcase = #{hasShowcase,jdbcType=INTEGER},
      approve_status = #{approveStatus,jdbcType=VARCHAR},
      is_virtual = #{isVirtual,jdbcType=INTEGER},
      num_iid = #{numIid,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      nick = #{nick,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      valid_thru = #{validThru,jdbcType=BIGINT},
      sold_quantity = #{soldQuantity,jdbcType=BIGINT},
      violation = #{violation,jdbcType=INTEGER},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


</mapper>